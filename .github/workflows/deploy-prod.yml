name: Deploy to ECS

on:
  repository_dispatch:
    types: [deploy]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      VERSION: ${{github.event.client_payload.version}}
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up AWS credentials for GitHub Actions
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Set up Docker to authenticate with ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build the Docker image
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.VERSION }}
        run: |
          IMAGE_URI="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      # Step 5: Fetch the latest task definition
      - name: Get latest task definition
        run: |
          aws ecs describe-task-definition --task-definition ci-api-task-definition \
            --query taskDefinition > task-def.json

      # Step 6: Update the Task Definition with the new image
      - name: Update Task Definition Image
        id: task-def
        env:
          IMAGE_URI: ${{ env.IMAGE_URI }}
        run: |
          jq --arg new_image "$IMAGE_URI" \
            '.containerDefinitions[0].image = $new_image | del(.taskDefinitionArn, .revision, .status, .registeredAt, .registeredBy)' \
            task-def.json > task-definition.json
          echo "TASK_DEF_FILE=task-definition.json" >> $GITHUB_ENV

      # Step 7: Deploy updated task definition
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ env.TASK_DEF_FILE }}
          cluster: ci-api-cluster
          service: ci-api-service
          wait-for-service-stability: true
